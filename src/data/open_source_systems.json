[
  {
    "name": "Omniplex",
    "type": "interface",
    "id": "omniplex",
    "github_description": "Open-Source Perplexity.",
    "supportedIndexes": [
      "Bing"
    ],
    "add_favicon_background": "black",
    "tagline": "Where Knowledge Evolves",
    "default_placeholder": "Ask anything...",
    "search_link": "https://www.omniplex.ai/",
    "twitter_link": "https://twitter.com/Mr_BishalSaha",
    "github_link": "https://github.com/Omniplex-ai/omniplex",
    "discord_link": "https://discord.gg/87Mh7q5ZSd",
    "reddit_link": "https://www.reddit.com/r/omniplex_ai/",
    "open_source_license": "GNU Affero General Public License v3.0",
    "landing_page_screenshots": [
      "screencapture-omniplex-ai-2024-05-01-15_23_16.png"
    ],
    "share_links_supported": true,
    "example_shared_links": [
      {"query": "How fast can an elephant run?", "url": "https://omniplex.ai/chat/zw7NGZ41WK"}
    ],
    "characteristics": {
      "output": "generated response"}
  },
  {
    "name": "Simplicity",
    "id": "simplicity",
    "type": "interface",
    "supportedIndexes": [
      "Exa"
    ],
    "supportedIndexesText": {
      "text": "exa_client = Exa( os.environ.get(\"EXA_API_KEY\"))",
      "quote": true,
      "code": true
    },
    "github_description": "Lightweight open-source perplexity",
    "characteristics": {
      "output": "generated response"
    },
    "search_link": "https://smpl.pongo.ai/",
    "twitter_link": "https://twitter.com/joinpongo",
    "open_source_license": "MIT License",
    "github_link": "https://github.com/PongoAI/simplicity"
  },
  {
    "name": "Marginalia Search",
    "type": "engine",
    "id": "marginalia-search",
    "github_description": "Internet search engine for text-oriented websites. Indexing the small, old and weird web.",
    "about_link": {
      "title": "About Marginalia Search",
      "url": "https://www.marginalia.nu/marginalia-search/about/"
    },
    "search_link": "https://search.marginalia.nu/search?query=%s",
    "github_link": "https://github.com/MarginaliaSearch/MarginaliaSearch",
    "twitter_link": "https://twitter.com/MarginaliaNu",
    "characteristics": {
      "output": "list of links"
    },
    "open_source_license": "GNU Affero General Public License v3.0"
  },
  {
    "name": "SciPhi Agent Search",
    "id": "sciphi",
    "type": "interface",
    "characteristics": {
      "output": "generated response"
    },
    "base_url": "https://search.sciphi.ai/",
    "search_link": "https://search.sciphi.ai/search?q=%s",
    "github_link": "https://github.com/SciPhi-AI/agent-search",
    "github_description": "AgentSearch is a framework for powering search agents and enabling customizable local search.",
    "open_source_license": "Apache License 2.0",
    "landing_page_screenshots": ["screencapture-search-sciphi-ai-2024-04-26-01_58_29.png"]
  },
  {
    "name": "SearXNG",
    "id": "searxng",
    "type": "metasearch",
    "matrix_link": "https://matrix.to/#/#searxng:matrix.org",
    "characteristics": {
      "output": "list of links"
    },
    "search_link": "https://docs.searxng.org/",
    "github_link": "https://github.com/searxng/searxng",
    "open_source_license": "GNU Affero General Public License v3.0",
    "github_description": "SearXNG is a free internet metasearch engine which aggregates results from various search services and databases. Users are neither tracked nor profiled."
  },
  {
    "name": "Cohere Toolkit",
    "id": "cohere-toolkit",
    "characteristics": {
      "output": "generated response"
    },
    "supportedIndexesText": {
      "text": "LangChain retrievers and Tavily",
      "quote": false,
      "urls": [
        {"label": "LangChain", "url": "https://langchain.com/docs/modules/data_connection/retrievers/"},
        {"label": "Tavily", "url": "https://tavily.com/"}
      ]
    },
    "type": "interface",
    "github_description": "Toolkit is a collection of prebuilt components enabling users to quickly build and deploy RAG applications.",
    "search_link": "https://coral.cohere.com/",
    "wikipedia_link": "https://en.wikipedia.org/wiki/Cohere",
    "github_link": "https://github.com/cohere-ai/cohere-toolkit/",
    "open_source_license": "MIT License",
    "landing_page_screenshots": ["screencapture-coral-cohere-2024-04-26-02_25_55-edit.png"]
  },
  {
    "name": "HuggingChat",
    "id": "huggingchat",
    "type": "interface",
    "github_description": "Open source codebase powering the HuggingChat app",
    "supportedIndexesText": {
      "text": "You can enable the web search through an API by adding YDC_API_KEY (docs.you.com) or SERPER_API_KEY (serper.dev) or SERPAPI_KEY (serpapi.com) or SERPSTACK_API_KEY (serpstack.com) to your .env.local.\n\nYou can also simply enable the local google websearch by setting USE_LOCAL_WEBSEARCH=true in your .env.local or specify a SearXNG instance by adding the query URL to SEARXNG_QUERY_URL.",
      "quote": true,
      "urls": [
        {"label": "docs.you.com", "url": "https://docs.you.com/"},
        {"label": "serper.dev", "url": "https://serper.dev/"},
        {"label": "serpapi.com", "url": "https://serpapi.com/"},
        {"label": "serpstack.com", "url": "https://serpstack.com/"}
      ]
    },
    "search_link": "https://huggingface.co/chat/",
    "wikipedia_link": "https://en.wikipedia.org/wiki/Hugging_Face",
    "github_link": "https://github.com/huggingface/chat-ui",
    "open_source_license": "Apache License 2.0",
    "manual_switch_required": true,
    "characteristics": {
      "output": "generated response"
    }
  },
  {
    "name": "Lepton Search",
    "id": "lepton-search",
    "github_description": "Building a quick conversation-based search demo with Lepton AI.",
    "supportedIndexes": [
      "Bing",
      "Google"
    ],
    "supportedIndexesText": {
      "text": "BING_SEARCH_V7_ENDPOINT = \"https://api.bing.microsoft.com/v7.0/search\"\nBING_MKT = \"en-US\"\n\nGOOGLE_SEARCH_ENDPOINT = \"https://customsearch.googleapis.com/customsearch/v1\"\nSERPER_SEARCH_ENDPOINT = \"https://google.serper.dev/search\"\nSEARCHAPI_SEARCH_ENDPOINT = \"https://www.searchapi.io/api/v1/search\"",
      "quote": true,
      "code": true
    },
    "special_note": "beta",
    "type": "interface",
    "search_link": "https://search.lepton.run/",
    "github_link": "https://github.com/leptonai/search_with_lepton",
    "open_source_license": "Apache License 2.0",
    "characteristics": {
      "output": "generated response"
    },
    "twitter_link": "https://twitter.com/leptonai"
  },
    {
      "name": "Morphic",
      "id": "morphic",
      "special_note": "beta",
      "supportedIndexes": [
        "Tavily",
        "Exa"
      ],
      "supportedIndexesText": {
        "text": "const searchAPI: 'tavily' | 'exa' = 'tavily'",
        "quote": true,
        "code": true
      },
      "github_description": "An AI-powered search engine with a generative UI.",
      "type": "interface",
      "characteristics": {
        "output": "generated response"
      },
      "search_link": "https://morphic.sh/",
      "github_link": "https://github.com/miurla/morphic",
      "open_source_license": "Apache License 2.0",
      "twitter_link": "https://twitter.com/miiura",
      "landing_page_screenshots": ["screencapture-morphic-sh-2024-04-26-10_55_55.png"]
    },
  {
    "name": "Presearch",
    "id": "presearch",
    "type": "engine",
    "github_description": "Presearch is an open source decentralized search engine, powered by the community.",
    "characteristics": {
      "output": "list of links"
    },
    "search_link": "https://presearch.com/search?q=%s",
    "android_choice_screen_options": true,
    "twitter_link": "https://twitter.com/presearchnews",
    "discord_link": "https://discord.presearch.com/",
    "youtube_link": "https://www.youtube.com/channel/UCgU-2uscwUP6x27mUpCGWwg",
    "github_link": "https://github.com/presearchofficial",
    "reddit_link": "https://www.reddit.com/r/Presearch/",
    "facebook_link": "https://www.facebook.com/presearch.io",
    "linkedin_link": "https://www.linkedin.com/company/presearchofficial/",
    "open_source_license": "Mozilla Public License Version 2.0",
    "wikipedia_link": "https://en.wikipedia.org/wiki/Distributed_search_engine#Presearch",
    "privacy_policy_link": "https://presearch.com/privacy",
    "about_link": {
      "title": "About Presearch",
      "url": "https://presearch.io/about"
    }
  },
  {
    "name": "OpenPerPlex",
    "type": "interface",
    "id": "openperplex",
    "special_note": "beta",
    "characteristics": {
      "output": "generated response"
    },
    "search_link": "https://openperplex.com",
    "twitter_link": "https://twitter.com/KhazzanYassine",
      "landing_page_screenshots": ["screencapture-openperplex-2024-05-01-16_14_14.png", "openperplex-example-query-2024-04-26-03_14_04.png"]
  },
  {
    "name": "Stract",
    "type": "engine",
    "id": "stract",
    "github_description": "web search done right",
    "special_note": "beta",
    "indices": [{"name":"Stract", "url": "https://stract.com/"}],
    "characteristics": {
      "output": "list of links"
    },
    "search_link": "https://stract.com/search?q=%s",
    "github_link": "https://github.com/StractOrg/stract",
    "open_source_license": "GNU Affero General Public License v3.0",
    "screenshots": ["screencapture-stract-2024-04-26-01_57_13.png"]
  },
    {
      "name": "YaCy",
      "type": "engine",
      "id": "yacy",
      "characteristics": {
        "output": "list of links"
      },
      "github_link": "https://github.com/yacy/yacy_search_server",
      "twitter_link": "https://twitter.com/yacy_search",
      "github_description": "Distributed Peer-to-Peer Web Search Engine and Intranet Search Appliance",
      "open_source_license": "GNU General Public | GNU Lesser General Public License"
    },
  {
    "name": "Mwmbl",
    "type": "engine",
    "id": "mwmbl",
    "characteristics": {
      "output": "list of links"
    },
    "github_description": "A free, ad-free, non-profit search engine",
    "default_placeholder": "Search on Mwmbl...",
    "about_link": {
      "title": "The Book of Mwmbl",
      "url": "https://book.mwmbl.org/"
    },
    "search_link": "https://mwmbl.org/?q=%s",
    "twitter_link": "https://twitter.com/mwmblorg",
    "linkedin_link": "https://www.linkedin.com/company/mwmbl",
    "matrix_link": "https://matrix.to/#/#mwmbl:matrix.org",
    "reddit_link": "https://www.reddit.com/r/mwmbl/",
    "base_url": "https://mwmbl.org",
    "instagram_link": "https://www.instagram.com/mwmblorg/",
    "hacker_news_link": "https://hn.algolia.com/?dateRange=all&page=0&prefix=true&query=https%3A%2F%2Fmwmbl.org%2F&sort=byPopularity&type=story",
    "nonprofit_verification": "https://opencollective.com/mwmbl",
    "github_link": "https://github.com/mwmbl",
    "github_sponsor_link": "https://github.com/sponsors/mwmbl",
    "open_source_license": "GNU Affero General Public License v3.0",
    "youtube_link": "https://www.youtube.com/@mwmbl",
    "pronunciation": {"string": "mumble", "url": "https://github.com/mwmbl/mwmbl?tab=readme-ov-file#how-do-you-pronounce-mwmbl"}
  },
  {
    "name": "Developers Digest's LLM Answer Engine",
    "characteristics": {
      "output": "generated response"
    },
    "github_description": "Build a Perplexity-Inspired Answer Engine Using Next.js, Groq, Mixtral, Langchain, OpenAI, Brave & Serper",
    "type": "interface",
    "id": "developers-digest-llm-answer-engine",
    "github_link": "https://github.com/developersdigest/llm-answer-engine",
    "twitter_link": "https://twitter.com/dev__digest",
    "youtube_link": "https://www.youtube.com/@developersdigest",
    "open_source_license": "MIT License"
  }
]

